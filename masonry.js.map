{"version":3,"file":"masonry.js","sources":["masonry.js"],"sourcesContent":["const container = document.querySelector(\".masonry\");\nconst children = [...container.children];\nconst verticalGap = 15;\n\nfunction shouldSkipMasonry() {\n\treturn window.innerWidth <= 900 && !window.matchMedia(\"print\").matches && !window._printing;\n}\n\nfunction clearMasonry() {\n    // Remove masonry styling\n    container.classList.remove(\"masonry\");\n\n    // Reset container max-height\n    container.style.height = `unset`;\n\n    // Reset children to default\n    for (let i = 0; i < children.length; i++) children[i].style.transform = \"none\";\n}\n\nfunction calculateElementBounds(element) {\n    const bounds = element.getBoundingClientRect();\n    const height = Math.max(\n        bounds.height,\n        element.offsetHeight,\n        element.clientHeight,\n        element.scrollHeight\n    );\n    const width = Math.max(\n        bounds.width,\n        element.offsetWidth,\n        element.clientWidth,\n        element.scrollWidth\n    );\n\n    return { height, width };\n}\n\nfunction setChildrenMinimumWidth(value) {\n    for (let i = 0; i < children.length; i++) children[i].style.minWidth = value;\n}\n\nfunction masonry() {\n    const containerWidth = container.offsetWidth;\n    let columns = 2;\n\n    // If the screen size is too smals\n    if (shouldSkipMasonry()) {\n        // Make each item take up the full width of the container and be a full row\n        columns = 1;\n        setChildrenMinimumWidth(\"100%\");\n    } else {\n        // Otherwise, spread the items out evenly\n        setChildrenMinimumWidth(\"unset\");\n    }\n\n    // Ensure masonry styling\n    container.classList.add(\"masonry\");\n\n    // Define sizing\n    const rowOffsets = new Array(columns).fill(verticalGap);\n    let columnOffset = 0;\n\n    // Iterates trough children and applies masonry\n    for (let i = 0; i < children.length; i++) {\n        const column = i % columns;\n        const child = children[i];\n        const bounds = calculateElementBounds(child);\n\n        // Apply to the element\n        child.style.transform = `translate(${Math.ceil(columnOffset)}px, ${Math.ceil(rowOffsets[column])}px)`;\n\t\tchild.style.opacity = 1;\n\n        // Append the offsets for the next child\n\t\trowOffsets[column] += bounds.height + verticalGap;\n\t\tcolumnOffset += containerWidth - bounds.width;\n\n        // Last column, reset column offset and start new row\n\t\tif (column >= columns - 1) columnOffset = 0;\n    }\n\n    // Set the container height\n    let containerHeight = Math.max(...rowOffsets) ;\n    container.style.height = `${containerHeight}px`;\n}\n\nwindow.addEventListener(\"load\", function () {\n\tsetTimeout(() => {\n\t\tmasonry();\n\t}, 0);\n});\n\nwindow.addEventListener(\"resize\", function () {\n\tsetTimeout(() => {\n\t\tmasonry();\n\t}, 10);\n});\n"],"names":["container","document","querySelector","children","verticalGap","shouldSkipMasonry","window","innerWidth","matchMedia","matches","_printing","clearMasonry","classList","remove","style","height","let","i","length","transform","calculateElementBounds","element","bounds","getBoundingClientRect","Math","max","offsetHeight","clientHeight","scrollHeight","width","offsetWidth","clientWidth","scrollWidth","setChildrenMinimumWidth","value","minWidth","masonry","containerWidth","columns","add","rowOffsets","Array","fill","columnOffset","column","child","ceil","opacity","containerHeight","addEventListener","setTimeout"],"mappings":"AAAA,MAAMA,UAAYC,SAASC,cAAc,UAAU,EAC7CC,SAAW,CAAC,GAAGH,UAAUG,UACzBC,YAAc,GAEpB,SAASC,oBACR,OAAOC,OAAOC,YAAc,KAAO,CAACD,OAAOE,WAAW,OAAO,EAAEC,SAAW,CAACH,OAAOI,SACnF,CAEA,SAASC,eAELX,UAAUY,UAAUC,OAAO,SAAS,EAGpCb,UAAUc,MAAMC,OAAS,QAGzB,IAAKC,IAAIC,EAAI,EAAGA,EAAId,SAASe,OAAQD,CAAC,GAAId,SAASc,GAAGH,MAAMK,UAAY,MAC5E,CAEA,SAASC,uBAAuBC,GAC5B,IAAMC,EAASD,EAAQE,sBAAsB,EAc7C,MAAO,CAAER,OAbMS,KAAKC,IAChBH,EAAOP,OACPM,EAAQK,aACRL,EAAQM,aACRN,EAAQO,YACZ,EAQiBC,MAPHL,KAAKC,IACfH,EAAOO,MACPR,EAAQS,YACRT,EAAQU,YACRV,EAAQW,WACZ,CAEuB,CAC3B,CAEA,SAASC,wBAAwBC,GAC7B,IAAKlB,IAAIC,EAAI,EAAGA,EAAId,SAASe,OAAQD,CAAC,GAAId,SAASc,GAAGH,MAAMqB,SAAWD,CAC3E,CAEA,SAASE,UACL,IAAMC,EAAiBrC,UAAU8B,YACjCd,IAAIsB,EAAU,EAGVjC,kBAAkB,GAElBiC,EAAU,EACVL,wBAAwB,MAAM,GAG9BA,wBAAwB,OAAO,EAInCjC,UAAUY,UAAU2B,IAAI,SAAS,EAGjC,IAAMC,EAAa,IAAIC,MAAMH,CAAO,EAAEI,KAAKtC,WAAW,EACtDY,IAAI2B,EAAe,EAGnB,IAAK3B,IAAIC,EAAI,EAAGA,EAAId,SAASe,OAAQD,CAAC,GAAI,CACtC,IAAM2B,EAAS3B,EAAIqB,EACbO,EAAQ1C,SAASc,GACjBK,EAASF,uBAAuByB,CAAK,EAG3CA,EAAM/B,MAAMK,uBAAyBK,KAAKsB,KAAKH,CAAY,QAAQnB,KAAKsB,KAAKN,EAAWI,EAAO,OACrGC,EAAM/B,MAAMiC,QAAU,EAGtBP,EAAWI,IAAWtB,EAAOP,OAASX,YACtCuC,GAAgBN,EAAiBf,EAAOO,MAGpCe,GAAUN,EAAU,IAAGK,EAAe,EACxC,CAGA3B,IAAIgC,EAAkBxB,KAAKC,IAAI,GAAGe,CAAU,EAC5CxC,UAAUc,MAAMC,OAAYiC,EAAH,IAC7B,CAEA1C,OAAO2C,iBAAiB,OAAQ,WAC/BC,WAAW,KACVd,QAAQ,CACT,EAAG,CAAC,CACL,CAAC,EAED9B,OAAO2C,iBAAiB,SAAU,WACjCC,WAAW,KACVd,QAAQ,CACT,EAAG,EAAE,CACN,CAAC"}